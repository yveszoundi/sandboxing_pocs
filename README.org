#+TITLE: Sandboxing POCs

*NOTE: This is all work in progress, with just enough material for me to decide what to do for a specific program*.

I need to remember few considerations and potential challenges.
- [X] [[https://github.com/yveszoundi/sandboxing_pocs/tree/main/sandboxing_windows][Windows sandboxing]]
- [ ] Linux sandboxing
- [ ] Mac OS sandboxing

* Background
This set of POCs was created to better assess the future direction of the [[https://github.com/rimerosolutions/entrusted][Entrusted document sanitizer program]] (it currently relies on [[https://podman.io/][Podman]] or [[https://www.docker.com/][Docker]], hopefully not for long). =Entrusted= is available for Windows, Linux and Mac OS. For other operation systems, you can run the Web interface via [[https://github.com/rimerosolutions/entrusted/tree/main/ci_cd/live_cd][Live CD]] (inside a virtual machine). The long term goal is to rely on OS native provided solutions, instead of delegating process isolation to =Docker/Podman=.

* Approach

For now, I've decided to take a programmatic approach (Except on Mac OS) for the following reasons:

- On Windows, Microsoft changes its vision constantly and deprecates technologies regularly. I wanted to try UWP applications but it seems deprecated, MSIX is only available for Windows 10+.
- On Linux, I already have [[https://www.man7.org/linux/man-pages/man2/seccomp.2.html][seccomp]] filters for syscalls (used with =Docker/Podman=). I need something else for transient file permissions (i.e., ideally not [[https://www.redhat.com/en/topics/linux/what-is-selinux][SELinux]], [[https://www.apparmor.net/][AppArmor]], [[https://flatpak.org/][Flatpak]], [[https://snapcraft.io/][Snap]], [[https://firejail.wordpress.com/][Firejail]], etc.). [[https://docs.kernel.org/userspace-api/landlock.html][Landlock]] exists but it's fairly new and it looks complex.
- On Mac OS, it seems like all we can do is deal with [[https://developer.apple.com/documentation/xcode/configuring-the-macos-app-sandbox][entitlements and the App Sandbox]]. [[https://igorstechnoclub.com/sandbox-exec/][sandbox-exec]] is not something that Apple wants developers to use and they can change whatever without notice...

* Future

I'd like to transition to a declarative approach to security constraints in the long run.
- I'd like permissions (e.g., file access) to be transient in nature, only available when a programs needs it and while it's running
- Preferrably permissions need to be more fine-grained than what Mac OS offers with its sandbox, so that developers don't feel to handicapped
- The user should understand application capabilities easily and not be bothered constantly with popups to grant permissions (unless desired)
- I could focus on application features and maybe other people can take care of software packaging for a given operating system.
